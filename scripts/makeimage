#!/usr/bin/env python
# This script has been updated to work with python 2.7 and python 3.6

import glob
import os
import platform
import re
import sys
import shutil
import subprocess

from glob import glob


PROJECT_ROOT = os.path.join(os.getenv("GOPATH"), "src", "bitbucket.di2e.net", "dime", "object-drive-server")

#-------------------------------------------------------------------------------

def run_dockerfile(dockerfile, image, tag="latest"):
    """
    Runs the docker build.
    Args:
        dockerfile: absolute path to Dockerfile
        image: Image name
        tag: Image tag. Defaults to "latest".
    """
    name_with_tag = image + ":" + tag
    try:
        build_dir = os.path.split(dockerfile)[0]
        subprocess.check_call(
                ['docker', 'build', '--no-cache', '-t', name_with_tag, build_dir],
                stdout=sys.stdout, stderr=sys.stderr)
    except subprocess.CalledProcessError:
        raise

#-------------------------------------------------------------------------------

if __name__ == '__main__':

    os.chdir(PROJECT_ROOT)
    scripts_dir = os.path.join(PROJECT_ROOT, 'scripts')
    build_dir = os.path.join(scripts_dir, 'build')
    if os.path.exists(build_dir):
        shutil.rmtree(build_dir)
    
    # copy glibc folder
    shutil.copytree('glibc', os.path.join(build_dir, 'glibc'))

    # copy DI2E MITM Proxy certificates if running as jenkins
    # https://confluence.di2e.net/display/DI2E/DI2E+Proxy+Server+Certificates
    if os.environ['USER'] == 'jenkins':
        proxycert_dir = os.path.join(PROJECT_ROOT, 'defaultcerts', 'di2e-mitm-proxy', '*.crt')
        for file in glob(proxycert_dir):
            shutil.copy(file, build_dir)

    # Use our Dockerfile from this directory
    dockerfile = os.path.join(scripts_dir, "Dockerfile")
    run_dockerfile(dockerfile, "deciphernow/odriverpm-bc")
    shutil.rmtree(build_dir)