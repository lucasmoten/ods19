version: '2'

services:

  finder:
    image: deciphernow/odrive:finder-service-1.0.0
    ports:
      - "16123:8443"
    depends_on:
      - zk
      - aac
      - es
      - odrive

  aac:
    image: deciphernow/aac:1.2.2
    tty: true
    stdin_open: true
    ports:
      - "9093:9000"
      - "7444:8443"
    environment:
      COM_DECIPHERNOW_SERVER_CONFIG_ZK_ZOOKEEPERCONNECTION: zk:2181
      COM_DECIPHERNOW_SERVER_CONFIG_ZK_ANNOUNCEMENTPOINT: /cte/service/aac/1.2
      COM_DECIPHERNOW_SERVER_CONFIG_TLS_TRUSTSTORE: /opt/config/certificates/jks/truststore.jks
      COM_DECIPHERNOW_SERVER_CONFIG_TLS_KEYSTORE: /opt/config/certificates/jks/twlserver.jks
      COM_DECIPHERNOW_SERVER_CONFIG_THRIFT_PORT: 9000
      REDIS_HOST: redis
      ZOOKEEPER_URL: zk:2181
      CLOUDSHARE_DIAS_ATTRIBUTE_SERVICE_ENDPOINT: https://dias/ws/services/DIASMessageReceiverService
    depends_on:
      - zk
      - redis
      - dias

  cte-user-service:
    hostname: cte-user-service
    image: deciphernow/userservice:1.0.1-SNAPSHOT
    environment:
      ELASTICSEARCH_HOST: es
      ZK_HOST: zk
      JAVAX_PERSISTENCE_JDBC_URL: jdbc:postgresql://postgres:5432/chimera_test
      ZK_ANNOUNCEPOINT_AAC: /cte/service/aac/1.1
      ZOOKEEPER_URL: zk:2181
      GOV_IC_CTE_SERVER_CONFIG_ZK_ZOOKEEPERCONNECTION: zk:2181
    ports:
      - "7472:8443"
    depends_on:
      - zk
      - aac
      - postgres

  odrive:
    image: "deciphernow/odrive:vSNAPSHOT"
    environment:
        - OD_AAC_CA=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/client-aac/trust/client.trust.pem
        - OD_AAC_CERT=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/client-aac/id/client.cert.pem
        - OD_AAC_HOST=aac                     # has default
        - OD_AAC_KEY=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/client-aac/id/client.key.pem
        - OD_AAC_CN=twl-server-generic2
        - OD_AAC_HEALTHCHECK={"version":"2.1.0","classif":"U"}
        - OD_AAC_INSECURE_SKIP_VERIFY=false
        - OD_PEER_CN=twl-server-generic2
        - OD_PEER_INSECURE_SKIP_VERIFY=false
        - OD_AWS_ACCESS_KEY_ID=$OD_AWS_ACCESS_KEY_ID
        - OD_AWS_ENDPOINT                     # has default
        - OD_AWS_REGION=us-east-1             # has default
        - OD_AWS_S3_BUCKET
        - OD_AWS_SECRET_ACCESS_KEY=$OD_AWS_SECRET_ACCESS_KEY
        - OD_AWS_SECRET_KEY=$OD_AWS_SECRET_ACCESS_KEY
        - OD_CACHE_EVICTAGE                   # has default
        - OD_CACHE_HIGHWATERMARK              # has default
        - OD_CACHE_LOWWATERMARK               # has default
        - OD_CACHE_ROOT
        - OD_CACHE_WALKSLEEP
        - OD_CACHE_PARTITION
        - OD_DB_CA=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/client-mysql/trust
        - OD_DB_CERT=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/client-mysql/id/client-cert.pem
        - OD_DB_CONN_PARAMS=parseTime=true&collation=utf8_unicode_ci&readTimeout=30s
        - OD_DB_HOST=metadatadb
        - OD_DB_KEY=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/client-mysql/id/client-key.pem
        - OD_DB_MAXIDLECONNS
        - OD_DB_MAXOPENCONNS
        - OD_DB_PASSWORD=dbPassword
        - OD_DB_PORT=3306
        - OD_DB_SCHEMA=metadatadb
        - OD_DB_USERNAME=dbuser
        - OD_ENCRYPT_MASTERKEY
        #- OD_EVENT_KAFKA_ADDRS=kafka:9092    # for a direct connect
        - OD_EVENT_ZK_ADDRS=zk:2181           # for discovery of kafka through zk
        - OD_EVENT_PUBLISH_FAILURE_ACTIONS
        - OD_EVENT_PUBLISH_SUCCESS_ACTIONS
        - OD_EVENT_TOPIC
        - OD_SERVER_ACL_WHITELIST1=cn=twl-server-generic2,ou=dae,ou=dia,ou=twl-server-generic2,o=u.s. government,c=us
        - OD_SERVER_CA=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/server/trust.pem
        - OD_SERVER_CERT=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/server/server.cert.pem
        - OD_SERVER_CIPHERS=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA
        - OD_SERVER_KEY=/go/src/bitbucket.di2e.net/dime/object-drive-server/defaultcerts/server/server.key.pem
        - OD_SERVER_PORT=4430
        - OD_ZK_ANNOUNCE=/cte/service/object-drive/1.0
        - OD_ZK_AAC=/cte/service/aac/1.2/thrift
        - OD_ZK_TIMEOUT
        - OD_ZK_URL
    depends_on:
        - metadatadb
        - aac
        - zk
        - dias
        - kafka

  metadatadb:
    image: "deciphernow/metadatadb:vSNAPSHOT"
    mem_limit: 1024m
    cpuset: "0"
    environment:
      - MYSQL_CONTAINER_NAME=metadatadb
      - MYSQL_USER=dbuser
      - MYSQL_DATABASE=metadatadb
      - MYSQL_ROOT_PASSWORD=dbRootPassword
      - MYSQL_PASSWORD=dbPassword
      - OD_ENCRYPT_MASTERKEY
    ports:
      - 3306:3306
    command: "./docker-entrypoint.sh mysqld_safe"

  mongo:
    image: mongo:3.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: "bedrock_user"
      MONGO_INITDB_ROOT_PASSWORD: "password"
      MONGO_DBNAME: "bedrock"
      MONGO_INITDB_DBNAME: "bedrock"
      MONGO_INITDB_DATABASE: "bedrock"


  odrive-indexer:
    image: deciphernow/odrive-indexer:1.0.0-SNAPSHOT
    environment:
      ODRIVE_TEMPLATES: "true"
      ODRIVE_FIELDS: "true"
      DEBUG: "false"
      MONGO_DB: "admin"
      MONGO_COLLECT_ALL_EVENTS_ENABLED: "false"
      ES_ALIAS_NAME: "odrive"
    depends_on:
      - es
      - kafka
      - zk
      - mongo

  dias:
    image: deciphernow/dias:1.1.0    
    ports:
      - "8443:443"

  zk:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  redis:
    image: deciphernow/redis:3.2.2
    depends_on:
      - zk

  es:
    hostname: es
    image: deciphernow/ess:1.7.2
    environment:
      - AAC_ZOOKEEPER_ANNOUNCEMENT_POINT=/cte/service/aac/1.1
    ports:
      - "9200:9200"
    depends_on:
      - zk
      - aac

  postgres:
    image: deciphernow/odrive:postgres-9.4
    depends_on:
      - zk

  kafka:
    hostname: kafka
    image: wurstmeister/kafka:0.10.2.1  #0.8.2.1 or 0.10.2.1
    environment:
      KAFKA_ADVERTISED_HOST: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zk
      KAFKA_CREATE_TOPICS: odrive-event:1:1 #for 0.8.2.1 use odrive-event #for 0.10.2.1 use odrive-event:1:1  # topic:replication-factor:partitions
    ports:
      - "22181:2181"
      - "29092:9092"
      - "9092:9092"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock

  proxier:
    image: nginx:1.13
    environment:
       - AAC_SERVICE_HOST=aac
       - AAC_SERVICE_PORT=8443
       - FINDER_HOST=finder
       - FINDER_PORT=8443
       - CTE_APPS_SERVICE_HOST=apps
       - CTE_APPS_SERVICE_PORT=8443
       - CTE_USER_SERVICE_HOST=cte-user-service
       - CTE_USER_SERVICE_PORT=8443
       - ODRIVE_SERVICE_HOST=odrive
       - ODRIVE_SERVICE_PORT=4430
    volumes:
       - ./proxier:/tmp/docker 
    ports:
       - "47080:80"
       - "8080:443"
    depends_on:
       - aac
       - finder
       - cte-user-service
       - odrive
  #    # The envsubst command will swap out anything in the input file that begins with $ with a corresponding env
  #    # variable, or if one can't be found, an empty string. Since nginx conf files also make use of $-prefixed
  #    # variables, we will pass in the specific variables we want envsubst to replace (this is called the "shell
  #    # format" argument). Also note that we need to escape our $-prefixed variables, docker-compose style, to
  #    # prevent docker-compose from trying to replace the variables (i.e., $VAR becomes $$VAR).
  #    # end of command: < /tmp/docker/odrive.nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
    command: /bin/bash -c "env && envsubst '$$ODRIVE_SERVICE_HOST $$ODRIVE_SERVICE_PORT $$FINDER_EXTERNAL_IP $$FINDER_HOST $$FINDER_PORT $$AAC_SERVICE_HOST $$AAC_SERVICE_PORT $$CTE_APPS_SERVICE_HOST $$CTE_APPS_SERVICE_PORT $$CTE_USER_SERVICE_HOST $$CTE_USER_SERVICE_PORT' < /tmp/docker/odrive.nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

