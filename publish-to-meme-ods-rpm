#!/bin/bash

# This script should be run whenever we have a server release intended to be 
# pushed to the MEME Dev VPC for Bedrock
#
# Publishes the Object Drive Server RPM to the buids.363-283.io S3 bucket for
# Bedrock. The Object Drive Server RPM should already have been built from 
# circle, and build number expected as argument. RPM filenames are converted to
# a format that denotes the version and build date. Prior to uploading to S3 
# bucket, you will be prompted for each, allowing opportunity to test builds, 
# and exit to verify structure.
#
# Pre-requisites
#   1. Object Drive Server rpm should be built by circle and in the 
#      odrive-builds bucket
#   2. You have aws credentials defined in ~/.aws/credentials for each of
#      decipher363283io    and    meme
#   3. You must have a GITHUB_TOKEN representing an OAuth token with read 
#      access to this repo. Get one by following guidance here 
#      https://developer.github.com/v3/guides/getting-started/

# Default to latest/current version
ODRIVE_VERSION=$(grep 'ODRIVE_VERSION:' circle.yml | awk '{ print $2}' | sed -e 's/^"//' -e 's/"$//')

# Validate
COUNT_GITHUB_TOKEN=$(printenv | grep "GITHUB_TOKEN" -c)
if [ $COUNT_GITHUB_TOKEN -eq 0 ]
then
  echo "envvar GITHUB_TOKEN is not set"
  exit 1
fi
GITHUB_API_LINE=$(curl -s -H "Authorization: token ${GITHUB_TOKEN}" https://api.github.com/repos/DecipherNow/object-drive-server/releases | head -20 | grep "\"name\":")
GITHUB_API_VERSION=$(echo $GITHUB_API_LINE | awk '{print $3}')
GITHUB_API_BUILDNUM=$(echo $GITHUB_API_LINE | awk '{print $6}' | sed s/"\","//)

if [ $GITHUB_API_VERSION -eq 0 ]
then
  ODS_VERSION=$ODRIVE_VERSION
else
  ODS_VERSION=$GITHUB_API_VERSION
fi
GOV_ODRIVE_VERSION=1.0-$ODS_VERSION

AWS_PROFILE_NAME="decipher363283io"
COUNT_PROFILE=$(cat ~/.aws/credentials | grep "${AWS_PROFILE_NAME}" | wc -l)
if [ $COUNT_PROFILE -eq 0 ]
then
  echo "A profile named $AWS_PROFILE_NAME was not found in ~/.aws/credentials"
  exit 1
fi
AWS_PROFILE_NAME="meme"
COUNT_PROFILE=$(cat ~/.aws/credentials | grep "${AWS_PROFILE_NAME}" | wc -l)
if [ $COUNT_PROFILE -eq 0 ]
then
  echo "A profile named $AWS_PROFILE_NAME was not found in ~/.aws/credentials"
  exit 1
fi


# Get from S3, built by CIRCLE
RPMFILE=object-drive-${ODS_VERSION}.${GITHUB_API_BUILDNUM}.x86_64.rpm
aws s3 cp s3://odrive-builds/circle/rpms/release/${RPMFILE} . --profile decipher363283io
if [ -f "$RPMFILE" ]
then
  echo "Retrieved file ${RPMFILE}"
else
  echo "No file matching ${RPMFILE} was found in S3"
  exit 1
fi

# Determine build date
BUILDDATE=$(rpm -qip ${RPMFILE} | grep "Build Date" | awk '{ print $6 " " $5 " " $7 }')
if [ -n "$BUILDDATE" ]
then
  echo "Build date is ${BUILDDATE}"
else
  echo "Could not determine build date"
  exit 1
fi

# Format BUILDDATE as YYYYMMDD
BUILDDATEYYYYMMDD=$(date -d"${BUILDDATE}" +%Y%m%d)
if [ -n "$BUILDDATEYYYYMMDD" ]
then
  echo "Formatted build date is ${BUILDDATEYYYYMMDD}"
else
  echo "Cound not convert to YYYYMMDD format"
  exit 1
fi

# File format needs to be
# <Service Name>-<major version>.<minor version>.<patch version>.<build number>.<YYYYMMDD>.rpm
REMOTEFILE="object-drive-${GOV_ODRIVE_VERSION}.${GITHUB_API_BUILDNUM}.${BUILDDATEYYYYMMDD}.rpm"
echo "File to save as in bucket is ${REMOTEFILE}"
echo "Command: aws s3 cp ${RPMFILE} s3://builds.363-283.io/${REMOTEFILE} --profile meme"
echo "Do you wish to copy to the builds.363-283.io bucket?"
select yn in "Yes" "No"; do
  case $yn in
    "Yes") 
      aws s3 cp ${RPMFILE} s3://builds.363-283.io/${REMOTEFILE} --profile meme
      break
      ;;
    "No") 
      break
      ;;
  esac
done

