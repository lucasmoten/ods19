package integration

import (
	"crypto/tls"
	"log"
	"testing"
	"time"

	apacheAac "decipher.com/oduploader/cmd/cryptotest/gen-go/aac"
	"decipher.com/oduploader/config"
	"decipher.com/oduploader/util"
	apacheThrift "git.apache.org/thrift.git/lib/go/thrift"
)

// NOTE:
// This file is marked "Deprecated" due to the inability of the
// standard Apache lib to connect via SSL. The working Thrift client
// library is able to accept a net.Conn generated by a golang
// openssl wrapper. Since the function does not begin with "Test",
// the test runner will ignore it.

func ApacheThriftImpl(t *testing.T) {

	dur, _ := time.ParseDuration("20s")
	// transport, err := apacheThrift.NewTSSLSocket("twl-server-generic2:9093", cfg)
	fac := apacheThrift.NewTBinaryProtocolFactoryDefault()
	conn, err := config.NewOpenSSLTransport()
	if err != nil {
		log.Fatal(err)
	}
	cfg := tls.Config{InsecureSkipVerify: true}
	transport := apacheThrift.NewTSSLSocketFromConnTimeout(conn, &cfg, dur)
	//protocol := fac.GetProtocol(transport)
	client := apacheAac.NewAacServiceClientFactory(transport, fac)

	propertiesMap := make(map[string]string)
	propertiesMap["bedrock.message.traffic.dia.orgs"] = "DIA DOD_DIA"
	propertiesMap["bedrock.message.traffic.orcon.project"] = "DCTC"
	propertiesMap["bedrock.message.traffic.orcon.group"] = "All"
	byteList, _ := util.StringToInt8Slice("<ddms:title ism:classification='S'>Foo</ddms:title>")
	res, err := client.BuildAcm(byteList, "XML", propertiesMap)
	if err != nil {
		log.Println("error encountered")
		log.Fatal(err)
	}
	log.Println("Success?  ----  ", res.GetAcmValid())
}
