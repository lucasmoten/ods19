version: '2'

services:

    zk:
        image: "jplock/zookeeper"
        ports:
          - 2181:2181

    dias:
        image: "deciphernow/dias:1.1.0"
        ports:
          - "8443:443"

    redis:
        image: deciphernow/odrive:redis-3.2.2
        ports:
          - 6379:6379
        depends_on:
          - "zk"

    kafka:
        hostname: kafka 
        image: wurstmeister/kafka:0.10.2.1 # 0.8.2.1
        environment:
          KAFKA_ADVERTISED_HOST: "kafka"
          KAFKA_ADVERTISED_PORT: "9092"
          #KAFKA_BROKER_ID: "9092"                # needed for v0.8.2.2, autogenerated in later versions
          KAFKA_ZOOKEEPER_CONNECT: "zk"
          KAFKA_CREATE_TOPICS: "odrive-event:1:1"  # topic:replication-factor:partitions
        ports:
          - 9092:9092
        depends_on:
          - "zk"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    aac:
        image: "deciphernow/aac:1.2.2"
        tty: true
        stdin_open: true    
        ports:
          - 9093:9000
          - 7444:8443
        environment:
          COM_DECIPHERNOW_SERVER_CONFIG_ZK_ZOOKEEPERCONNECTION: zk:2181
          COM_DECIPHERNOW_SERVER_CONFIG_ZK_ANNOUNCEMENTPOINT: /cte/service/aac/1.2
          COM_DECIPHERNOW_SERVER_CONFIG_TLS_TRUSTSTORE: /opt/config/certificates/jks/truststore.jks
          COM_DECIPHERNOW_SERVER_CONFIG_TLS_KEYSTORE: /opt/config/certificates/jks/twlserver.jks        
          COM_DECIPHERNOW_SERVER_CONFIG_THRIFT_PORT: 9000
          REDIS_HOST: "redis"
          ZOOKEEPER_URL: "zk:2181"
          CLOUDSHARE_DIAS_ATTRIBUTE_SERVICE_ENDPOINT: "https://dias/ws/services/DIASMessageReceiverService"
        depends_on:
          - "zk"
          - "redis"
          - "dias"

    metadatadb:
        image: "deciphernow/metadatadb:latest" #built local
        hostname: "fqdn.for.metadatadb.local"
        environment:
          - MYSQL_CONTAINER_NAME=metadatadb
          - MYSQL_USER=dbuser
          - MYSQL_DATABASE=metadatadb
          - MYSQL_ROOT_PASSWORD=dbRootPassword
          - MYSQL_PASSWORD=dbPassword
          - OD_ENCRYPT_MASTERKEY
        command: "./docker-entrypoint.sh mysqld_safe"
        ports:
          - "3309:3306"

    odrive:
        image: "deciphernow/odrive:latest" #built local
        environment:
          - OD_AAC_CA=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/client-aac/trust/client.trust.pem
          - OD_AAC_CERT=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/client-aac/id/client.cert.pem
          - OD_AAC_CN=twl-server-generic2
          - OD_AAC_HEALTHCHECK={"version":"2.1.0","classif":"U"}
          - OD_AAC_INSECURE_SKIP_VERIFY=false
          - OD_AAC_KEY=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/client-aac/id/client.key.pem
          - OD_AWS_ACCESS_KEY_ID
          - OD_AWS_REGION=us-east-1
          - OD_AWS_S3_BUCKET=decipherers
          - OD_AWS_SECRET_ACCESS_KEY
          - OD_AWS_SECRET_KEY
          - OD_CACHE_PARTITION=circleci/build
          - OD_DB_USERNAME=dbuser
          - OD_DB_PASSWORD=dbPassword
          - OD_DB_HOST=metadatadb
          - OD_DB_PORT=3306
          - OD_DB_SCHEMA=metadatadb
          - OD_DB_CA=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/client-mysql/trust/ca.pem
          - OD_DB_CERT=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/client-mysql/id/client-cert.pem
          - OD_DB_KEY=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/client-mysql/id/client-key.pem
          - OD_DB_CONN_PARAMS=parseTime=true&collation=utf8_unicode_ci&readTimeout=30s
          - OD_EXTERNAL_HOST=proxier
          - OD_EXTERNAL_PORT=8888
          - OD_ENCRYPT_MASTERKEY=qheucir912h343u91i23hiu
          #- OD_EVENT_KAFKA_ADDRS=kafka:9092
          - OD_EVENT_ZK_ADDRS=zk:2181
          - OD_EVENT_PUBLISH_FAILURE_ACTIONS=disabled
          - OD_EVENT_PUBLISH_SUCCESS_ACTIONS=disabled
          - OD_EVENT_TOPIC=odrive-event
          - OD_PEER_CN=twl-server-generic2
          - OD_PEER_INSECURE_SKIP_VERIFY=false
          - OD_SERVER_CA=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/server/trust.pem
          - OD_SERVER_CERT=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/server/server.cert.pem
          - OD_SERVER_KEY=/go/src/github.com/deciphernow/object-drive-server/defaultcerts/server/server.key.pem
          - OD_SERVER_PORT=4430
          - OD_ZK_AAC=/cte/service/aac/1.2/thrift
          - OD_ZK_ANNOUNCE=/cte/service/object-drive/1.0
          - OD_ZK_BASEPATH
          - OD_ZK_ROOT
          - OD_ZK_TIMEOUT
          - OD_ZK_URL
        ports:
          - 4430:4430
          - 4480:4480
        depends_on:
          - "metadatadb"
          - "aac"
          - "zk"
          - "kafka"

    proxier:
      image: nginx
      environment:
        - AAC_SERVICE_HOST=aac
        - AAC_SERVICE_PORT=9093
        - ODRIVE_SERVICE_HOST=odrive
        - ODRIVE_SERVICE_PORT=4430
      volumes:
        - ../docker/proxier:/tmp/docker
      ports:
        - "8888:443"
      depends_on:
        - aac
        - odrive
    #    # The envsubst command will swap out anything in the input file that begins with $ with a corresponding env
    #    # variable, or if one can't be found, an empty string. Since nginx conf files also make use of $-prefixed
    #    # variables, we will pass in the specific variables we want envsubst to replace (this is called the "shell
    #    # format" argument). Also note that we need to escape our $-prefixed variables, docker-compose style, to
    #    # prevent docker-compose from trying to replace the variables (i.e., $VAR becomes $$VAR).
    #    # end of command: < /tmp/docker/odrive.nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
      command: /bin/bash -c "env && envsubst '$$ODRIVE_SERVICE_HOST $$ODRIVE_SERVICE_PORT $$AAC_SERVICE_HOST $$AAC_SERVICE_PORT' < /tmp/docker/circle.nginx.conf.tpl > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

