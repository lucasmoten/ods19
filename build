#!/usr/bin/env python

import os
import sys
import logging
import subprocess

logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)
log = logging.getLogger('BUILD')

GOPATH = os.getenv('GOPATH')
PROJECT_ROOT = os.path.join(GOPATH, 'src', 'decipher.com', 'oduploader')


def generate_certs():
    gencerts_dir = os.path.join(PROJECT_ROOT, 'cmd', 'cryptotest', 'defaultcerts', 'server')
    if os.path.exists(gencerts_dir):
        os.chdir(gencerts_dir)
        try:
            subprocess.check_call(['./exportit'])
        except subprocess.CalledProcessError:
            log.error('Error in call to exportit script')


def go_get_libs():
    os.chdir(PROJECT_ROOT)
    try:
        log.info('Running `go get`')
        subprocess.check_call(['go', 'get', './...', ])
    except subprocess.CalledProcessError:
        log.error('Error in call to `go get .\...`')


def update_thrift_lib():
    repository = 'github.com/samuel/go-thrift/generator'
    try:
        subprocess.check_call(['go', 'get', '-u', repository])
    except subprocess.CalledProcessError:
        log.error('Could not get repository %s' % repository)


def main():
    generate_certs()
    go_get_libs()


if __name__ == '__main__':
    try:
        log.info("Starting build.")
        main()
        log.info("Build finished.")

    except Exception:
        sys.exit(1)
