#!/bin/bash

# This script should be run whenever we have releases intended to be pushed to 
# the MEME Dev VPC for Bedrock.
#
# Publishes the Object Drive Server and Drive UI RPMs to the buids.363-283.io 
# S3 bucket for Bedrock. The Object Drive Server RPM should already have been 
# built from circle, and build number expected as argument. The Drive UI RPM is
# custom for bedrock, and is built on demand, using the gitlab pipeline number 
# as the version for the RPM. RPM filenames are converted to a format that 
# denotes the version and build date. Prior to uploading to S3 bucket, you will
# be prompted for each, allowing opportunity to test builds, and exit to verify
# structure.
#
# Pre-requisites
#   1. Object Drive Server rpm should be built by circle and in the 
#      odrive-builds bucket
#   2. You have the gitlab cte/object-drive-ui project cloned to 
#      $OD_ROOT/object-drive-ui on develop branch
#   3. You have environment variables set for MEME_AWS_ACCESS_KEY_ID and 
#      MEME_AWS_SECRET_ACCESS_KEY for writing to the builds.363-283.io bucket
#   4. You have environment varaibles set for GITLAB_TOKEN to access the API 
#      from Gitlab to read and determine pipeline version number

ODRIVE_VERSION="1.0.3"

CIRCLE_BUILD_NUM=$1
if [ ${#1} -eq 0 ]
then
  echo "You must provide the build number corresponding to the RPM"
  echo "to retrieve from odrive-builds and push to builds.363-283.io"
  echo "as the first argument"
  echo "For example, ./publishrpm 1028"
  exit 1
fi

COUNTMEMEAWSKEY=$(printenv | grep "MEME_AWS_ACCESS_KEY_ID" -c)
if [ $COUNTMEMEAWSKEY -eq 0 ]
then
  echo "envvar MEME_AWS_ACCESS_KEY_ID is not set"
  exit 1
fi
COUNTMEMESECRET=$(printenv | grep "MEME_AWS_SECRET_ACCESS_KEY" -c)
if [ $COUNTMEMESECRET -eq 0 ]
then
  echo "envvar MEME_AWS_SECRET_ACCESS_KEY is not set"
  exit 1
fi
if [ ! "$GITLAB_TOKEN" ]
then
  echo "envvar GITLAB_TOKEN is not set"
  exit 1
fi

export AWS_ACCESS_KEY_ID=$MEME_AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY=$MEME_AWS_SECRET_ACCESS_KEY

# Get from S3, built by CIRCLE
RPMFILE=object-drive-${ODRIVE_VERSION}.${CIRCLE_BUILD_NUM}.x86_64.rpm
curl -O https://s3.amazonaws.com/odrive-builds/circle/rpms/${RPMFILE} -f
if [ -f "$RPMFILE" ]
then
  echo "Retrieved file ${RPMFILE}"
else
  echo "No file matching ${RPMFILE} was found in S3"
  exit 1
fi

# Determine build date
BUILDDATE=$(rpm -qip ${RPMFILE} | grep "Build Date" | awk '{ print $6 " " $5 " " $7 }')
if [ -n "$BUILDDATE" ]
then
  echo "Build date is ${BUILDDATE}"
else
  echo "Could not determine build date"
  exit 1
fi

# Format BUILDDATE as YYYYMMDD
BUILDDATEYYYYMMDD=$(date -d"${BUILDDATE}" +%Y%m%d)
if [ -n "$BUILDDATEYYYYMMDD" ]
then
  echo "Formatted build date is ${BUILDDATEYYYYMMDD}"
else
  echo "Cound not convert to YYYYMMDD format"
  exit 1
fi


# File format needs to be
# <Service Name>-<major version>.<minor version>.<patch version>.<build number>.<YYYYMMDD>.rpm
REMOTEFILE="object-drive-${ODRIVE_VERSION}.${CIRCLE_BUILD_NUM}.${BUILDDATEYYYYMMDD}.rpm"
echo "File to save as in bucket is ${REMOTEFILE}"
echo "Command: aws s3 cp ${RPMFILE} s3://builds.363-283.io/${REMOTEFILE}"
echo "Do you wish to copy to the builds.363-283.io bucket?"
select yn in "Yes" "No"; do
  case $yn in
    "Yes") 
      aws s3 cp ${RPMFILE} s3://builds.363-283.io/${REMOTEFILE}
      break
      ;;
    "No") 
      break
      ;;
  esac
done

# Determine what the version will be (from UI package.json)
DRIVE_UI_VERSION="$(grep '"version":' ${OD_ROOT}/object-drive-ui/package.json|sed 's/\"version\": \"//g'|sed 's/\",//g'|sed 's/ //g'|sed 's/-/./g')"
# Determine What UI Pipeline version will be
DRIVE_UI_PIPELINE="$(curl -s --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" "https://gitlab.363-283.io/api/v3/projects/639/pipelines" | grep -Po '"id":.*?[^\\]",' | head -1 | sed -e 's/,.*//' | sed -e 's/"id"://')"

# Build the UI (resulting RPM is drive-1.0-{pipeline#}.x86_64.rpm)
BUILDDATEUI=$(date +%Y%m%d)
UIRPMFILE="drive-1.0-bedrock.x86_64.rpm"
cd ${OD_ROOT}/object-drive-ui
jspm install
npm run build
./buildimage.sh
cd ${OD_ROOT}/object-drive-ui/rpm
./build-bedrock

# File format needs to be
# <App Name>-<major version>.<minor version>.<patch version>.<build number>.<YYYYMMDD>.{SNAPSHOT}.rpm
# drive-ui-1.0.0.{CIRCLE_BUILD_NUM}.{BUILDDATEUI}.SNAPSHOT.rpm
UIREMOTEFILE="drive-ui-${DRIVE_UI_VERSION}.${DRIVE_UI_PIPELINE}.${BUILDDATEUI}.SNAPSHOT.rpm"
echo "File to save as in bucket is ${UIREMOTEFILE}"
echo "Command: aws s3 cp ${UIRPMFILE} s3://builds.363-283.io/${UIREMOTEFILE}"
echo "Do you wish to copy to the builds.363-283.io bucket?"
select yn in "Yes" "No"; do
  case $yn in
    "Yes") 
      aws s3 cp ${UIRPMFILE} s3://builds.363-283.io/${UIREMOTEFILE}
      break
      ;;
    "No") 
      break
      ;;
  esac
done

